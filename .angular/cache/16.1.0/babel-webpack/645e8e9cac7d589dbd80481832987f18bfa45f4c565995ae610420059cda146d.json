{"ast":null,"code":"export class LogEntry {\n  constructor(date, distanceStart, distanceEnd, description, fuel, amount, amountUnit, priceUnit, distance) {\n    this.setLogEntryDetail({\n      date: new Date(),\n      distanceStart: 0,\n      distanceEnd: 0,\n      description: ' start',\n      fuel: true,\n      timestamp: new Date().toISOString()\n    });\n    this.setFuelEntryDetail({\n      amount: 0,\n      amountUnit: 'liter',\n      priceUnit: 0,\n      distance: 0,\n      timestamp: new Date().toISOString()\n    });\n    if (date) {\n      this.logEntryDetail.date = date;\n    }\n    if (distanceStart) {\n      this.logEntryDetail.distanceStart = distanceStart;\n    }\n    if (distanceEnd) {\n      this.logEntryDetail.distanceEnd = distanceEnd;\n    }\n    if (description) {\n      this.logEntryDetail.description = description;\n    }\n    if (fuel) {\n      this.logEntryDetail.fuel = fuel;\n    }\n    if (amount) {\n      this.fuelEntryDetail.amount = amount;\n    }\n    if (amountUnit) {\n      this.fuelEntryDetail.amountUnit = amountUnit;\n    }\n    if (priceUnit) {\n      this.fuelEntryDetail.priceUnit = priceUnit;\n    }\n    if (distance) {\n      this.fuelEntryDetail.distance = distance;\n    }\n  }\n  get LogEntryDetail() {\n    return this.logEntryDetail;\n  }\n  get FuelEntryDetail() {\n    return this.fuelEntryDetail;\n  }\n  setLogEntryDetail(value) {\n    this.logEntryDetail = value;\n  }\n  setFuelEntryDetail(value) {\n    this.fuelEntryDetail = value;\n  }\n}","map":{"version":3,"names":["LogEntry","constructor","date","distanceStart","distanceEnd","description","fuel","amount","amountUnit","priceUnit","distance","setLogEntryDetail","Date","timestamp","toISOString","setFuelEntryDetail","logEntryDetail","fuelEntryDetail","LogEntryDetail","FuelEntryDetail","value"],"sources":["/Volumes/Transcend/ionic/driver-log/src/app/logEntries/log-entry.ts"],"sourcesContent":["export class LogEntry {\n\n  logEntryDetail!: {\n    date: Date;\n    distanceStart: number;\n    distanceEnd: number;\n    description: string;\n    fuel: boolean;\n    timestamp: any\n    id?: any;\n  };\n\n  fuelEntryDetail!: {\n    amount: number;\n    amountUnit: string;\n    priceUnit: number;\n    distance: number;\n    timestamp:any;\n    logEntryId?: any,\n    id?: any;\n  };\n\n  constructor(\n    date?: Date,\n    distanceStart?: number,\n    distanceEnd?: number,\n    description?: string,\n    fuel?: boolean,\n    amount?: number,\n    amountUnit?: string,\n    priceUnit?: number,\n    distance?: number\n  ) {\n    this.setLogEntryDetail({\n      date: new Date(),\n      distanceStart: 0,\n      distanceEnd: 0,\n      description: ' start',\n      fuel: true,\n      timestamp: new Date().toISOString(),\n    });\n    this.setFuelEntryDetail({\n      amount: 0,\n      amountUnit: 'liter',\n      priceUnit: 0,\n      distance: 0,\n      timestamp: new Date().toISOString()\n    });\n\n    if (date) {\n      this.logEntryDetail.date = date;\n    }\n    if (distanceStart) {\n      this.logEntryDetail.distanceStart = distanceStart;\n    }\n    if (distanceEnd) {\n      this.logEntryDetail.distanceEnd = distanceEnd;\n    }\n    if (description) {\n      this.logEntryDetail.description = description;\n    }\n    if (fuel) {\n      this.logEntryDetail.fuel = fuel;\n    }\n    if (amount) {\n      this.fuelEntryDetail.amount = amount;\n    }\n    if (amountUnit) {\n      this.fuelEntryDetail.amountUnit = amountUnit;\n    }\n    if (priceUnit) {\n      this.fuelEntryDetail.priceUnit = priceUnit;\n    }\n    if (distance) {\n      this.fuelEntryDetail.distance = distance;\n    }\n  }\n\n  get LogEntryDetail() {\n    return this.logEntryDetail;\n  }\n\n  get FuelEntryDetail() {\n    return this.fuelEntryDetail;\n  }\n\n  setLogEntryDetail(value: {\n    date: Date;\n    distanceStart: number;\n    distanceEnd: number;\n    description: string;\n    fuel: boolean;\n    timestamp: any;\n    id?;\n  }) {\n    this.logEntryDetail = value;\n  }\n\n  setFuelEntryDetail(value: {\n    amount: number;\n    amountUnit: string;\n    priceUnit: number;\n    distance: number;\n    timestamp: any;\n    id?;\n  }) {\n    this.fuelEntryDetail = value;\n  }\n}\n"],"mappings":"AAAA,OAAM,MAAOA,QAAQ;EAsBnBC,YACEC,IAAW,EACXC,aAAsB,EACtBC,WAAoB,EACpBC,WAAoB,EACpBC,IAAc,EACdC,MAAe,EACfC,UAAmB,EACnBC,SAAkB,EAClBC,QAAiB;IAEjB,IAAI,CAACC,iBAAiB,CAAC;MACrBT,IAAI,EAAE,IAAIU,IAAI,EAAE;MAChBT,aAAa,EAAE,CAAC;MAChBC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,QAAQ;MACrBC,IAAI,EAAE,IAAI;MACVO,SAAS,EAAE,IAAID,IAAI,EAAE,CAACE,WAAW;KAClC,CAAC;IACF,IAAI,CAACC,kBAAkB,CAAC;MACtBR,MAAM,EAAE,CAAC;MACTC,UAAU,EAAE,OAAO;MACnBC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE,CAAC;MACXG,SAAS,EAAE,IAAID,IAAI,EAAE,CAACE,WAAW;KAClC,CAAC;IAEF,IAAIZ,IAAI,EAAE;MACR,IAAI,CAACc,cAAc,CAACd,IAAI,GAAGA,IAAI;;IAEjC,IAAIC,aAAa,EAAE;MACjB,IAAI,CAACa,cAAc,CAACb,aAAa,GAAGA,aAAa;;IAEnD,IAAIC,WAAW,EAAE;MACf,IAAI,CAACY,cAAc,CAACZ,WAAW,GAAGA,WAAW;;IAE/C,IAAIC,WAAW,EAAE;MACf,IAAI,CAACW,cAAc,CAACX,WAAW,GAAGA,WAAW;;IAE/C,IAAIC,IAAI,EAAE;MACR,IAAI,CAACU,cAAc,CAACV,IAAI,GAAGA,IAAI;;IAEjC,IAAIC,MAAM,EAAE;MACV,IAAI,CAACU,eAAe,CAACV,MAAM,GAAGA,MAAM;;IAEtC,IAAIC,UAAU,EAAE;MACd,IAAI,CAACS,eAAe,CAACT,UAAU,GAAGA,UAAU;;IAE9C,IAAIC,SAAS,EAAE;MACb,IAAI,CAACQ,eAAe,CAACR,SAAS,GAAGA,SAAS;;IAE5C,IAAIC,QAAQ,EAAE;MACZ,IAAI,CAACO,eAAe,CAACP,QAAQ,GAAGA,QAAQ;;EAE5C;EAEA,IAAIQ,cAAcA,CAAA;IAChB,OAAO,IAAI,CAACF,cAAc;EAC5B;EAEA,IAAIG,eAAeA,CAAA;IACjB,OAAO,IAAI,CAACF,eAAe;EAC7B;EAEAN,iBAAiBA,CAACS,KAQjB;IACC,IAAI,CAACJ,cAAc,GAAGI,KAAK;EAC7B;EAEAL,kBAAkBA,CAACK,KAOlB;IACC,IAAI,CAACH,eAAe,GAAGG,KAAK;EAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}