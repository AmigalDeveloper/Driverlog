{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { IonModal } from '@ionic/angular';\nimport { identicalpasswordValidator } from '../../validators/identicalpassworde.validator.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nexport class UserRegisterComponent {\n  constructor(service, fb, modalCtrl) {\n    this.service = service;\n    this.fb = fb;\n    this.modalCtrl = modalCtrl;\n  }\n  onSubmit(form) {\n    return this.register(this.registerForm);\n  }\n  cancel() {\n    return this.modalCtrl.dismiss(null, 'cancel');\n  }\n  confirm() {\n    return this.modalCtrl.dismiss(this.register(this.registerForm), 'confirm');\n  }\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      username: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.nullValidator),\n      retypePassword: new FormControl('', identicalpasswordValidator),\n      name: new FormControl('', Validators.nullValidator)\n    });\n  }\n  register(form) {\n    console.log('UserRegisterComponent::register is called');\n    if (form.valid) {\n      this.registerStatus = this.service.register(form).subscribe(resp => {\n        console.log('UserReggeisterComponent::register resultatet af resp.body ', resp);\n        return resp;\n      });\n    }\n  }\n  onWillDismiss(event) {\n    const ev = event;\n    console.info('paramter event er ', event);\n    console.info('paramter ev er ', ev);\n    if (ev.detail.role === 'confirm') {\n      this.message = `Hello, ${ev.detail.data}!`;\n    }\n  }\n}\nUserRegisterComponent.ɵfac = function UserRegisterComponent_Factory(t) {\n  return new (t || UserRegisterComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ModalController));\n};\nUserRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserRegisterComponent,\n  selectors: [[\"app-user-register\"]],\n  viewQuery: function UserRegisterComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(IonModal, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n    }\n  },\n  decls: 36,\n  vars: 2,\n  consts: [[\"slot\", \"start\"], [3, \"click\"], [\"slot\", \"end\"], [3, \"formGroup\", \"ngSubmit\"], [\"position\", \"floating\"], [\"color\", \"danger\"], [\"required\", \"\", \"formControlName\", \"username\", \"type\", \"text\"], [\"required\", \"\", \"formControlName\", \"password\", \"type\", \"password\"], [\"required\", \"\", \"formControlName\", \"retypePassword\", \"type\", \"password\"], [\"slot\", \"helper\"], [\"slot\", \"error\"], [\"block\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n  template: function UserRegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0)(3, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function UserRegisterComponent_Template_ion_button_click_3_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(4, \"cancel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"ion-title\");\n      i0.ɵɵtext(6, \"Indtast bruger oplysninger \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"ion-buttons\", 2)(8, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function UserRegisterComponent_Template_ion_button_click_8_listener() {\n        return ctx.confirm();\n      });\n      i0.ɵɵtext(9, \"Registrer\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"ion-content\")(11, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function UserRegisterComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.onSubmit(ctx.registerForm);\n      });\n      i0.ɵɵelementStart(12, \"ion-item\")(13, \"ion-label\", 4);\n      i0.ɵɵtext(14, \"E-Mail \");\n      i0.ɵɵelementStart(15, \"ion-text\", 5);\n      i0.ɵɵtext(16, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"ion-input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ion-item\")(19, \"ion-label\", 4);\n      i0.ɵɵtext(20, \"Password \");\n      i0.ɵɵelementStart(21, \"ion-text\", 5);\n      i0.ɵɵtext(22, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(23, \"ion-input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"ion-item\")(25, \"ion-label\", 4);\n      i0.ɵɵtext(26, \"Gentag Password \");\n      i0.ɵɵelementStart(27, \"ion-text\", 5);\n      i0.ɵɵtext(28, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(29, \"ion-input\", 8);\n      i0.ɵɵelementStart(30, \"ion-note\", 9);\n      i0.ɵɵtext(31, \"Gentag password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"ion-note\", 10);\n      i0.ɵɵtext(33, \"Password er ikke ens\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"ion-button\", 11);\n      i0.ɵɵtext(35, \" Register \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid && ctx.registerForm.value.password === ctx.registerForm.value.retypePassword);\n    }\n  },\n  dependencies: [i3.IonButton, i3.IonButtons, i3.IonContent, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonNote, i3.IonText, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","IonModal","identicalpasswordValidator","UserRegisterComponent","constructor","service","fb","modalCtrl","onSubmit","form","register","registerForm","cancel","dismiss","confirm","ngOnInit","group","username","email","password","nullValidator","retypePassword","name","console","log","valid","registerStatus","subscribe","resp","onWillDismiss","event","ev","info","detail","role","message","data","i0","ɵɵdirectiveInject","i1","UserService","i2","FormBuilder","i3","ModalController","selectors","viewQuery","UserRegisterComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","UserRegisterComponent_Template_ion_button_click_3_listener","ɵɵtext","ɵɵelementEnd","UserRegisterComponent_Template_ion_button_click_8_listener","UserRegisterComponent_Template_form_ngSubmit_11_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid","value"],"sources":["/Volumes/Transcend/ionic/driver-log/src/app/user/user-register/user-register.component.ts","/Volumes/Transcend/ionic/driver-log/src/app/user/user-register/user-register.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../user';\nimport {\n  Form,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { IonModal, ModalController } from '@ionic/angular';\nimport { UserService } from '../user.service';\nimport {OverlayEventDetail} from '@ionic/core/components';\nimport { identicalpasswordValidator } from '../../validators/identicalpassworde.validator.directive';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.scss'],\n})\nexport class UserRegisterComponent implements OnInit {\n  @ViewChild(IonModal) modal: IonModal;\n\n  registerForm: FormGroup<any> | FormGroup<{\n    username: FormControl<string>;\n    password: FormControl<string>;\n    retypePassword: FormControl<string>;\n    name: FormControl<string>;\n  }>;\n\n  registerStatus: any;\n  message: string;\n\n\n  constructor(private service: UserService, public fb: FormBuilder, private modalCtrl: ModalController) {}\n\n  onSubmit(form: FormGroup) {\n    return this.register(this.registerForm);\n  }\n\n  cancel() {\n    return this.modalCtrl.dismiss(null,'cancel');\n  }\n  confirm() {\n    return this.modalCtrl.dismiss(this.register(this.registerForm),'confirm');\n  }\n\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      username: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.nullValidator),\n      retypePassword: new FormControl('', identicalpasswordValidator),\n      name: new FormControl('', Validators.nullValidator),\n    });\n  }\n\n  register(form: FormGroup) {\n    console.log('UserRegisterComponent::register is called');\n    if(form.valid){\n      this.registerStatus = this.service.register(form)\n      .subscribe((resp) => {\n        console.log('UserReggeisterComponent::register resultatet af resp.body ',resp);\n        return resp;\n      });\n\n    }\n\n  }\n\n  onWillDismiss(event: Event) {\n    const ev = event as CustomEvent<OverlayEventDetail<string>>;\n\n    console.info('paramter event er ',event);\n    console.info('paramter ev er ',ev);\n\n    if (ev.detail.role === 'confirm') {\n      this.message = `Hello, ${ev.detail.data}!`;\n    }\n  }\n}\n\n\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"cancel()\">cancel</ion-button>\n    </ion-buttons>\n    <ion-title>Indtast bruger oplysninger </ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"confirm()\">Registrer</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit(registerForm)\">\n    <ion-item>\n      <ion-label position=\"floating\">E-Mail <ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-input required formControlName=\"username\" type=\"text\"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\">Password <ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-input required formControlName=\"password\" type=\"password\"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\">Gentag Password <ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-input required formControlName=\"retypePassword\" type=\"password\"></ion-input>\n      <ion-note slot=\"helper\">Gentag password</ion-note>\n      <ion-note slot=\"error\">Password er ikke ens</ion-note>\n    </ion-item>\n    <ion-button block color=\"primary\" type=\"submit\" [disabled]=\"registerForm.invalid && (registerForm.value.password === registerForm.value.retypePassword)\">\n      Register\n    </ion-button>\n  </form>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}