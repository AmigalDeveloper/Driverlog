{"ast":null,"code":"import { LogEntry } from '../log-entry';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { distanceValidator } from '../../validators/distance.validator.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../log-entries.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nfunction EditLogEntryFormComponent_ng_container_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-row\")(2, \"ion-col\")(3, \"ion-item\", 16);\n    i0.ɵɵelement(4, \"ion-input\", 17);\n    i0.ɵɵelementStart(5, \"ion-select\", 18)(6, \"ion-select-option\", 19);\n    i0.ɵɵtext(7, \"Liter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-select-option\", 20);\n    i0.ɵɵtext(9, \" kwh\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(10, \"ion-row\")(11, \"ion-col\")(12, \"ion-item\", 21)(13, \"ion-label\", 5);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"ion-input\", 22);\n    i0.ɵɵelementStart(16, \"label\", 23);\n    i0.ɵɵtext(17, \" kr\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"clearInput\", true);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\" pris/\", ctx_r0.form.value.amountUnit, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Indtast pris pr.\", ctx_r0.form.value.amountUnit, \"\");\n    i0.ɵɵproperty(\"clearInput\", true);\n  }\n}\nexport class EditLogEntryFormComponent {\n  //  driverlogForm: any;\n  //  editDriverLogItemForm: any;\n  constructor(entriesService, fb, modalCtrl) {\n    this.entriesService = entriesService;\n    this.fb = fb;\n    this.modalCtrl = modalCtrl;\n    //@Input() appDistanceValidator = DriverLogValidators.distance;\n    // description: any;\n    this.distanceEnd$ = new Subscription();\n    this.distanceEnd = 100;\n    console.log('input', this.selectedEntry);\n    entriesService.init();\n    this.ngOnInit();\n    this.now = new Date();\n  }\n  cancel() {\n    return this.modalCtrl.dismiss(null, 'cancel');\n    console.log('input ved cancel', this.selectedEntry);\n  }\n  confirm() {\n    return this.modalCtrl.dismiss(this.onSubmit(this.form), 'confirm');\n  }\n  onSubmit(form) {\n    console.log('input til onSubmit', form);\n    if (form.value.date && form.valid) {\n      // Create LogEntry object\n      let logEntry;\n      if (this.selectedEntry) {\n        logEntry = this.selectedEntry;\n      } else {\n        logEntry = new LogEntry();\n      }\n      // update Logentry object with data from form\n      logEntry.setLogEntryDetail({\n        ...logEntry.logEntryDetail,\n        date: form.value.date,\n        distanceStart: form.value.distanceStart,\n        distanceEnd: form.value.distanceEnd,\n        description: form.value.description,\n        fuel: form.value.fuel\n      });\n      // if fuel is entered, then add data for fuel to LogEntry object\n      if (form.value.fuel) {\n        logEntry.setFuelEntryDetail({\n          ...logEntry.fuelEntryDetail,\n          amount: form.value.amount,\n          amountUnit: form.value.amountUnit,\n          priceUnit: form.value.priceUnit\n        });\n      }\n      const logEntryPutResult = this.entriesService.put(logEntry);\n      logEntryPutResult.then(result => {\n        form.reset();\n        this.now = new Date();\n      }, error => console.error('logEntry saved failen', error));\n    }\n  }\n  onClick() {}\n  ngOnInit() {\n    console.log('onInit input', this.selectedEntry);\n    this.distanceEnd$ = this.entriesService.getEntries().subscribe(logEntries => {\n      if (logEntries) {\n        if (Array.isArray(logEntries)) {\n          // is logEntries an Array, then concat\n          this.distanceEnd = logEntries[0].logEntryDetail.distanceEnd;\n        } else {\n          // if logentries isn't an Array then add it first in the array\n          this.distanceEnd = logEntries.logEntryDetail.distanceEnd;\n        }\n      }\n    });\n    // if (this.selectedEntry) {\n    this.form = this.fb.group({\n      date: new FormControl(this.selectedEntry ? this.selectedEntry.logEntryDetail.date : new Date().toISOString().substring(0, 19), {\n        nonNullable: true\n      }),\n      description: new FormControl(this.selectedEntry ? this.selectedEntry.logEntryDetail.description : '', {\n        nonNullable: true\n      }),\n      distanceStart: new FormControl(this.selectedEntry ? this.selectedEntry.logEntryDetail.distanceStart : this.distanceEnd, {\n        nonNullable: true\n      }),\n      distanceEnd: new FormControl(this.selectedEntry ? this.selectedEntry.logEntryDetail.distanceEnd : this.distanceEnd, distanceValidator),\n      fuel: new FormControl(this.selectedEntry ? this.selectedEntry.logEntryDetail.fuel : false, {\n        nonNullable: true\n      }),\n      amount: new FormControl(this.selectedEntry ? this.selectedEntry.fuelEntryDetail.amount : 0, {\n        nonNullable: true\n      }),\n      amountUnit: new FormControl(this.selectedEntry ? this.selectedEntry.fuelEntryDetail.amountUnit : 'Liter', {\n        nonNullable: true\n      }),\n      priceUnit: new FormControl(this.selectedEntry ? this.selectedEntry.fuelEntryDetail.priceUnit : 0, {\n        nonNullable: true\n      })\n    });\n    //  }\n  }\n}\n\nEditLogEntryFormComponent.ɵfac = function EditLogEntryFormComponent_Factory(t) {\n  return new (t || EditLogEntryFormComponent)(i0.ɵɵdirectiveInject(i1.LogEntriesService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ModalController));\n};\nEditLogEntryFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditLogEntryFormComponent,\n  selectors: [[\"app-edit-log-entry-form\"]],\n  inputs: {\n    selectedEntry: \"selectedEntry\"\n  },\n  decls: 51,\n  vars: 2,\n  consts: [[\"slot\", \"start\"], [3, \"click\"], [\"slot\", \"end\"], [3, \"formGroup\", \"ngSubmit\"], [\"lines\", \"inline\", 1, \"d-inline\"], [\"position\", \"floating\"], [\"size\", \"16\", \"type\", \"datetime-local\", \"name\", \"date\", \"date\", \"\", \"formControlName\", \"date\"], [\"size\", \"50\", \"inputmode\", \"text\", \"maxlength\", \"50\", \"clearInput\", \"true\", \"type\", \"text\", \"placeholder\", \"indtast sted eller Form\\u00E5l\", \"name\", \"description\", \"description\", \"\", \"formControlName\", \"description\"], [\"slot\", \"helper\"], [\"slot\", \"error\"], [\"size\", \"10\", \"inputmode\", \"decimal\", \"maxlength\", \"10\", \"clearInput\", \"true\", \"type\", \"number\", \"placeholder\", \"Indtast start kilometer\", \"name\", \"distanceStart\", \"distanceStart\", \"\", \"formControlName\", \"distanceStart\"], [\"size\", \"10\", \"inputmode\", \"decimal\", \"maxlength\", \"10\", \"clearInput\", \"true\", \"type\", \"number\", \"placeholder\", \"Indtast Slut kilometer\", \"name\", \"distanceEnd\", \"distanceEnd\", \"\", \"formControlName\", \"distanceEnd\", \"appDistanceValidator\", \"\"], [\"lines\", \"inline\", \"id\", \"fuel\", 1, \"\"], [1, \"fuel-station\"], [\"slot\", \"start\", \"name\", \"fuel\", \"fuel\", \"\", \"formControlName\", \"fuel\"], [4, \"ngIf\"], [\"lines\", \"inline\", \"id\", \"amount\", 1, \"d-inline\"], [\"slot\", \"start\", \"size\", \"6\", \"inputmode\", \"decimal\", \"type\", \"number\", \"placeholder\", \"Indtast antal\", \"name\", \"amount\", \"amounts\", \"\", \"formControlName\", \"amount\", 3, \"clearInput\"], [\"name\", \"amountUnit\", \"id\", \"amountUnit\", \"okText\", \"v\\u00E6lg\", \"size\", \"2\", \"amountUnit\", \"\", \"formControlName\", \"amountUnit\"], [\"value\", \"Liter\"], [\"value\", \"kwh\"], [\"lines\", \"inline\", \"id\", \"priceUnit\", 1, \"d-inline\"], [\"inputmode\", \"decimal\", \"type\", \"number\", \"size\", \"6\", \"name\", \"priceUnit\", \"priceUnit\", \"\", \"formControlName\", \"priceUnit\", 3, \"clearInput\", \"placeholder\"], [\"position\", \"floating\", \"slot\", \"end\", 1, \"d-inline\", \"ion-float-end\", \"ion-text-end\", \"ion-align-self-center\"]],\n  template: function EditLogEntryFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0)(3, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function EditLogEntryFormComponent_Template_ion_button_click_3_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(4, \"cancel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"ion-title\");\n      i0.ɵɵtext(6, \"Indtast driver log oplysninger \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"ion-buttons\", 2)(8, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function EditLogEntryFormComponent_Template_ion_button_click_8_listener() {\n        return ctx.confirm();\n      });\n      i0.ɵɵtext(9, \"confirm\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"ion-content\")(11, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function EditLogEntryFormComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.onSubmit(ctx.form);\n      });\n      i0.ɵɵelementStart(12, \"ion-grid\")(13, \"ion-row\")(14, \"ion-col\")(15, \"ion-item\", 4)(16, \"ion-label\", 5);\n      i0.ɵɵtext(17, \"Dato\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"ion-input\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"ion-row\")(20, \"ion-col\")(21, \"ion-item\", 4)(22, \"ion-label\", 5);\n      i0.ɵɵtext(23, \" Beskrivelse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"ion-input\", 7);\n      i0.ɵɵelementStart(25, \"ion-note\", 8);\n      i0.ɵɵtext(26, \"must be at text\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"ion-note\", 9);\n      i0.ɵɵtext(28, \"fejl i ndtastningen\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(29, \"ion-row\")(30, \"ion-col\")(31, \"ion-item\", 4)(32, \"ion-label\", 5);\n      i0.ɵɵtext(33, \" Start kilometer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"ion-input\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(35, \"ion-row\")(36, \"ion-col\")(37, \"ion-item\", 4)(38, \"ion-label\", 5);\n      i0.ɵɵtext(39, \" Slut kilometer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"ion-input\", 11);\n      i0.ɵɵelementStart(41, \"ion-note\", 8);\n      i0.ɵɵtext(42, \"the distance end must be greater than distance start\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"ion-note\", 9);\n      i0.ɵɵtext(44, \"distance end is not greater than distance start\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(45, \"ion-row\")(46, \"ion-col\")(47, \"ion-item\", 12);\n      i0.ɵɵelement(48, \"span\", 13)(49, \"ion-checkbox\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(50, EditLogEntryFormComponent_ng_container_50_Template, 18, 4, \"ng-container\", 15);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(39);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.value.fuel);\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i3.IonButton, i3.IonButtons, i3.IonCheckbox, i3.IonCol, i3.IonContent, i3.IonGrid, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonNote, i3.IonRow, i3.IonSelect, i3.IonSelectOption, i3.IonTitle, i3.IonToolbar, i3.BooleanValueAccessor, i3.NumericValueAccessor, i3.SelectValueAccessor, i3.TextValueAccessor, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"@charset \\\"UTF-8\\\";\\n*[_ngcontent-%COMP%] {\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  --inner-padding-end: 0\\n  --inner-padding-end: 0 ;\\n}\\n\\nion-input[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n\\n.fuel-station[_ngcontent-%COMP%]::after {\\n  content: \\\"\\u26FD\\\";\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9nRW50cmllcy9lZGl0LWxvZy1lbnRyeS1mb3JtL2VkaXQtbG9nLWVudHJ5LWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCO0VBQ0UsVUFBQTtFQUNBLFNBQUE7RUFDQSxTQUFBO0VBQ0E7eUJBQUE7QUFHRjs7QUFFQTtFQUNFLFNBQUE7QUFDRjs7QUFHQTtFQUVFLFlBQUE7QUFERiIsInNvdXJjZXNDb250ZW50IjpbIioge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogMDtcbiAgLS1pbm5lci1wYWRkaW5nLWVuZDogMFxuICAtLWlubmVyLXBhZGRpbmctZW5kOiAwXG59XG5cblxuaW9uLWlucHV0IHtcbiAgbWFyZ2luOiAwO1xufVxuXG5cbi5mdWVsLXN0YXRpb246OmFmdGVyIHtcblxuICBjb250ZW50OiAnXFwyNkZEJyAgO1xuXG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["LogEntry","FormControl","Subscription","distanceValidator","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","ctx_r0","form","value","amountUnit","ɵɵpropertyInterpolate1","EditLogEntryFormComponent","constructor","entriesService","fb","modalCtrl","distanceEnd$","distanceEnd","console","log","selectedEntry","init","ngOnInit","now","Date","cancel","dismiss","confirm","onSubmit","date","valid","logEntry","setLogEntryDetail","logEntryDetail","distanceStart","description","fuel","setFuelEntryDetail","fuelEntryDetail","amount","priceUnit","logEntryPutResult","put","then","result","reset","error","onClick","getEntries","subscribe","logEntries","Array","isArray","group","toISOString","substring","nonNullable","ɵɵdirectiveInject","i1","LogEntriesService","i2","FormBuilder","i3","ModalController","selectors","inputs","decls","vars","consts","template","EditLogEntryFormComponent_Template","rf","ctx","ɵɵlistener","EditLogEntryFormComponent_Template_ion_button_click_3_listener","EditLogEntryFormComponent_Template_ion_button_click_8_listener","EditLogEntryFormComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","EditLogEntryFormComponent_ng_container_50_Template"],"sources":["/Volumes/Transcend/ionic/driver-log/src/app/logEntries/edit-log-entry-form/edit-log-entry-form.component.ts","/Volumes/Transcend/ionic/driver-log/src/app/logEntries/edit-log-entry-form/edit-log-entry-form.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { LogEntry } from '../log-entry';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder,\n  Form,\n} from '@angular/forms';\n\nimport { LogEntriesService } from '../log-entries.service';\nimport { DriverLogValidators } from '../../validators/driverlogs.validator';\nimport { Subscription } from 'rxjs';\nimport { distanceValidator } from '../../validators/distance.validator.directive';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-edit-log-entry-form',\n  templateUrl: './edit-log-entry-form.component.html',\n  styleUrls: ['./edit-log-entry-form.component.scss'],\n})\nexport class EditLogEntryFormComponent implements OnInit {\n  @Input() selectedEntry: LogEntry;\n  //@Input() appDistanceValidator = DriverLogValidators.distance;\n  // description: any;\n  distanceEnd$: number | Subscription = new Subscription();\n  distanceEnd: number | undefined = 100;\n  // distanceStart!: number;\n  // logEntries: any;\n  now: Date;\n  form: FormGroup<any> | FormGroup<{ date: FormControl<string | Date>; description: FormControl<string>; distanceStart: FormControl<number>; distanceEnd: FormControl<number>; fuel: FormControl<boolean>; amount: FormControl<number>; amountUnit: FormControl<string>; priceUnit: FormControl<number>; }>;\n\n  //  driverlogForm: any;\n  //  editDriverLogItemForm: any;\n\n  constructor(\n    private entriesService: LogEntriesService,\n    public fb: FormBuilder,\n    private modalCtrl: ModalController\n  ) {\n    console.log('input', this.selectedEntry);\n    entriesService.init();\n    this.ngOnInit();\n    this.now = new Date();\n\n  }\n\n  cancel() {\n    return this.modalCtrl.dismiss(null, 'cancel');\n    console.log('input ved cancel', this.selectedEntry);\n  }\n\n  confirm() {\n    return this.modalCtrl.dismiss(this.onSubmit(this.form), 'confirm');\n  }\n\n  onSubmit(form: FormGroup) {\n    console.log('input til onSubmit', form);\n    if (form.value.date && form.valid) {\n      // Create LogEntry object\n      let logEntry;\n      if(this.selectedEntry) { logEntry = this.selectedEntry} else { logEntry = new LogEntry();}\n      // update Logentry object with data from form\n      logEntry.setLogEntryDetail({...logEntry.logEntryDetail,\n        date: form.value.date,\n        distanceStart: form.value.distanceStart,\n        distanceEnd: form.value.distanceEnd,\n        description: form.value.description,\n        fuel: form.value.fuel,\n      });\n      // if fuel is entered, then add data for fuel to LogEntry object\n      if (form.value.fuel) {\n        logEntry.setFuelEntryDetail({...logEntry.fuelEntryDetail,\n          amount: form.value.amount,\n          amountUnit: form.value.amountUnit,\n          priceUnit: form.value.priceUnit,\n       });\n      }\n      const logEntryPutResult = this.entriesService.put(logEntry);\n      logEntryPutResult.then(\n        (result) => {\n          form.reset();\n          this.now = new Date();\n        },\n        (error) => console.error('logEntry saved failen', error)\n      );\n    }\n  }\n\n  onClick() {}\n\n  ngOnInit() {\n    console.log('onInit input', this.selectedEntry);\n    this.distanceEnd$ = this.entriesService\n      .getEntries()\n      .subscribe((logEntries: LogEntry) => {\n        if (logEntries) {\n          if (Array.isArray(logEntries)) {\n            // is logEntries an Array, then concat\n            this.distanceEnd = logEntries[0].logEntryDetail.distanceEnd;\n          } else {\n            // if logentries isn't an Array then add it first in the array\n            this.distanceEnd = logEntries.logEntryDetail.distanceEnd;\n          }\n        }\n      });\n   // if (this.selectedEntry) {\n      this.form = this.fb.group({\n        date: new FormControl(\n          this.selectedEntry\n            ? this.selectedEntry.logEntryDetail.date\n            : new Date().toISOString().substring(0, 19),\n          {\n            nonNullable: true,\n          }\n        ),\n        description: new FormControl(\n          this.selectedEntry\n           ? this.selectedEntry.logEntryDetail.description\n            : '',\n          { nonNullable: true }\n        ),\n        distanceStart: new FormControl(\n          this.selectedEntry\n            ? this.selectedEntry.logEntryDetail.distanceStart\n            : this.distanceEnd,\n          { nonNullable: true }\n        ),\n        distanceEnd: new FormControl(\n          this.selectedEntry ? this.selectedEntry.logEntryDetail.distanceEnd : this.distanceEnd, distanceValidator),\n        fuel: new FormControl(\n          this.selectedEntry\n            ? this.selectedEntry.logEntryDetail.fuel\n            : false,\n          { nonNullable: true }\n        ),\n        amount: new FormControl(\n          this.selectedEntry\n            ? this.selectedEntry.fuelEntryDetail.amount\n            : 0,\n          { nonNullable: true }\n        ),\n        amountUnit: new FormControl(\n          this.selectedEntry\n            ? this.selectedEntry.fuelEntryDetail.amountUnit\n            : 'Liter',\n          { nonNullable: true }\n        ),\n        priceUnit: new FormControl(\n          this.selectedEntry\n            ? this.selectedEntry.fuelEntryDetail.priceUnit\n            : 0,\n          { nonNullable: true }\n        ),\n      });\n  //  }\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"cancel()\">cancel</ion-button>\n    </ion-buttons>\n    <ion-title>Indtast driver log oplysninger </ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"confirm()\">confirm</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\n\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-item lines=\"inline\" class=\"d-inline\">\n            <ion-label position=\"floating\">Dato</ion-label>\n\n            <ion-input\n            size=\"16\"\n            type=\"datetime-local\"\n            name=\"date\"\n            date\n            formControlName=\"date\"></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item lines=\"inline\" class=\"d-inline\">\n            <ion-label position=\"floating\"> Beskrivelse</ion-label>\n\n            <ion-input\n            size=\"50\"\n            inputmode=\"text\"\n            maxlength=\"50\"\n            clearInput=\"true\"\n            type=\"text\"\n            placeholder=\"indtast sted eller Formål\"\n            name=\"description\"\n            description\n            formControlName=\"description\">\n\n          </ion-input>\n            <ion-note slot=\"helper\">must be at text</ion-note>\n            <ion-note slot=\"error\">fejl i ndtastningen</ion-note>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n\n        <ion-col>\n          <ion-item lines=\"inline\" class=\"d-inline\">\n            <ion-label position=\"floating\"> Start kilometer</ion-label>\n\n            <ion-input\n            size=\"10\"\n            inputmode=\"decimal\"\n            maxlength=\"10\"\n            clearInput=\"true\"\n            type=\"number\"\n            placeholder=\"Indtast start kilometer\"\n            name=\"distanceStart\"\n            distanceStart\n            formControlName=\"distanceStart\">\n            </ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item lines=\"inline\" class=\"d-inline\">\n            <ion-label position=\"floating\"> Slut kilometer</ion-label>\n\n              <ion-input\n              size=\"10\"\n              inputmode=\"decimal\"\n              maxlength=\"10\"\n              clearInput=\"true\"\n              type=\"number\"\n              placeholder=\"Indtast Slut kilometer\"\n              name=\"distanceEnd\"\n              distanceEnd\n              formControlName=\"distanceEnd\" appDistanceValidator>\n            </ion-input>\n            <ion-note slot=\"helper\">the distance end must be greater than distance start</ion-note>\n            <ion-note slot=\"error\">distance end is not greater than distance start</ion-note>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col>\n          <ion-item lines=\"inline\" id=\"fuel\" class=\"\">\n            <span class=\"fuel-station\"></span>\n\n            <ion-checkbox\n            slot=\"start\"\n            name=\"fuel\"\n            fuel\n            formControlName=\"fuel\">\n          </ion-checkbox>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ng-container *ngIf=\"form.value.fuel\">\n        <ion-row>\n          <ion-col>\n            <ion-item lines=\"inline\" class=\"d-inline\" id=\"amount\">\n\n                <ion-input\n                slot=\"start\"\n                size=\"6\"\n                inputmode=\"decimal\"\n                [clearInput]=\"true\"\n                type=\"number\"\n                placeholder=\"Indtast antal\"\n                name=\"amount\"\n                amounts\n                formControlName=\"amount\"\n                >\n              </ion-input>\n\n              <ion-select\n                name=\"amountUnit\"\n                id=\"amountUnit\"\n                okText=\"vælg\"\n                size=\"2\"\n                amountUnit\n                formControlName=\"amountUnit\"\n                >\n                <ion-select-option value=\"Liter\">Liter</ion-select-option>\n                <ion-select-option value=\"kwh\"> kwh</ion-select-option>\n              </ion-select>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col>\n\n            <ion-item lines=\"inline\" class=\"d-inline\" id=\"priceUnit\">\n              <ion-label position=\"floating\"> pris/{{form.value.amountUnit}}</ion-label>\n\n              <ion-input\n                inputmode=\"decimal\"\n                [clearInput]=\"true\"\n                type=\"number\"\n                size=\"6\"\n                placeholder=\"Indtast pris pr.{{form.value.amountUnit}}\"\n                name=\"priceUnit\"\n                priceUnit\n                formControlName=\"priceUnit\"\n              ></ion-input>\n              <label position=\"floating\" slot=\"end\" class=\"d-inline ion-float-end ion-text-end ion-align-self-center \">\n                kr</label>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n      </ng-container>\n    </ion-grid>\n  </form>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}